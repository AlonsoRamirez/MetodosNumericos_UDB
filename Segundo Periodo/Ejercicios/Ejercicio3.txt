*Neville e interpolación escalonada*
function [A]=Neville_valores(x,y,punto)
n=length(x);
A=zeros(n,n);
A(:,1)=y';
for j=2:n
    for i=j:n
         A(i,j) = vpa((punto-x(i+1-j))*A(i,j-1) - ((punto-x(i))*A(i-1,j-1)))/(x(i) - x(i+1-j));
    end
end
val_aprox = vpa(A(n,n))

>> x=[0.3 0.5 0.7 0.9 1.1 1.3];
>> Fx=[1.1733264 -0.6045824 -0.1716328 0.2312373 0.6753699 1.2815177];
>> x0=0.825;
>> [A]= Neville_valores(x,Fx,x0)
 
val_aprox =
 
0.10368913513641362
 

A =

  Columns 1 through 4

   1.1733e+00            0            0            0
  -6.0458e-01  -3.4937e+00            0            0
  -1.7163e-01   9.8961e-02   1.2217e+00            0
   2.3124e-01   8.0161e-02   8.3686e-02   2.2593e-01
   6.7537e-01   6.4688e-02   7.5326e-02   7.9157e-02
   1.2815e+00  -1.5808e-01   1.0646e-01   8.1811e-02

  Columns 5 through 6

            0            0
            0            0
            0            0
            0            0
   1.2961e-01            0
   8.0236e-02   1.0369e-01

>> interp1(x,Fx,x0,'spline') %escalonada

ans =

   1.0315e-01